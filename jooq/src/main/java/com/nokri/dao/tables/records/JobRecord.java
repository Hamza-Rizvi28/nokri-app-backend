/*
 * This file is generated by jOOQ.
 */
package src.main.java.com.nokri.dao.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;

import src.main.java.com.nokri.dao.tables.Job;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JobRecord extends UpdatableRecordImpl<JobRecord> implements Record8<Long, String, String, String, String, String, String, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.job.job_id</code>.
     */
    public void setJobId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.job.job_id</code>.
     */
    public Long getJobId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.job.descripton</code>.
     */
    public void setDescripton(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.job.descripton</code>.
     */
    public String getDescripton() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.job.country</code>.
     */
    public void setCountry(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.job.country</code>.
     */
    public String getCountry() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.job.city</code>.
     */
    public void setCity(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.job.city</code>.
     */
    public String getCity() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.job.contract_type</code>.
     */
    public void setContractType(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.job.contract_type</code>.
     */
    public String getContractType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.job.seniority_level</code>.
     */
    public void setSeniorityLevel(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.job.seniority_level</code>.
     */
    public String getSeniorityLevel() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.job.title</code>.
     */
    public void setTitle(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.job.title</code>.
     */
    public String getTitle() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.job.active</code>.
     */
    public void setActive(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.job.active</code>.
     */
    public Boolean getActive() {
        return (Boolean) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, String, String, String, String, String, String, Boolean> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, String, String, String, String, String, String, Boolean> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Job.JOB.JOB_ID;
    }

    @Override
    public Field<String> field2() {
        return Job.JOB.DESCRIPTON;
    }

    @Override
    public Field<String> field3() {
        return Job.JOB.COUNTRY;
    }

    @Override
    public Field<String> field4() {
        return Job.JOB.CITY;
    }

    @Override
    public Field<String> field5() {
        return Job.JOB.CONTRACT_TYPE;
    }

    @Override
    public Field<String> field6() {
        return Job.JOB.SENIORITY_LEVEL;
    }

    @Override
    public Field<String> field7() {
        return Job.JOB.TITLE;
    }

    @Override
    public Field<Boolean> field8() {
        return Job.JOB.ACTIVE;
    }

    @Override
    public Long component1() {
        return getJobId();
    }

    @Override
    public String component2() {
        return getDescripton();
    }

    @Override
    public String component3() {
        return getCountry();
    }

    @Override
    public String component4() {
        return getCity();
    }

    @Override
    public String component5() {
        return getContractType();
    }

    @Override
    public String component6() {
        return getSeniorityLevel();
    }

    @Override
    public String component7() {
        return getTitle();
    }

    @Override
    public Boolean component8() {
        return getActive();
    }

    @Override
    public Long value1() {
        return getJobId();
    }

    @Override
    public String value2() {
        return getDescripton();
    }

    @Override
    public String value3() {
        return getCountry();
    }

    @Override
    public String value4() {
        return getCity();
    }

    @Override
    public String value5() {
        return getContractType();
    }

    @Override
    public String value6() {
        return getSeniorityLevel();
    }

    @Override
    public String value7() {
        return getTitle();
    }

    @Override
    public Boolean value8() {
        return getActive();
    }

    @Override
    public JobRecord value1(Long value) {
        setJobId(value);
        return this;
    }

    @Override
    public JobRecord value2(String value) {
        setDescripton(value);
        return this;
    }

    @Override
    public JobRecord value3(String value) {
        setCountry(value);
        return this;
    }

    @Override
    public JobRecord value4(String value) {
        setCity(value);
        return this;
    }

    @Override
    public JobRecord value5(String value) {
        setContractType(value);
        return this;
    }

    @Override
    public JobRecord value6(String value) {
        setSeniorityLevel(value);
        return this;
    }

    @Override
    public JobRecord value7(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public JobRecord value8(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public JobRecord values(Long value1, String value2, String value3, String value4, String value5, String value6, String value7, Boolean value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JobRecord
     */
    public JobRecord() {
        super(Job.JOB);
    }

    /**
     * Create a detached, initialised JobRecord
     */
    public JobRecord(Long jobId, String descripton, String country, String city, String contractType, String seniorityLevel, String title, Boolean active) {
        super(Job.JOB);

        setJobId(jobId);
        setDescripton(descripton);
        setCountry(country);
        setCity(city);
        setContractType(contractType);
        setSeniorityLevel(seniorityLevel);
        setTitle(title);
        setActive(active);
    }
}
