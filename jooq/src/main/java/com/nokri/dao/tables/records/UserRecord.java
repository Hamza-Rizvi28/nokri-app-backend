/*
 * This file is generated by jOOQ.
 */
package src.main.java.com.nokri.dao.tables.records;


import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;

import src.main.java.com.nokri.dao.tables.User;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record8<Long, String, String, String, LocalDate, Boolean, Boolean, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.user.user_id</code>.
     */
    public void setUserId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.user.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.user.user_name</code>.
     */
    public void setUserName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.user.user_name</code>.
     */
    public String getUserName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.user.email</code>.
     */
    public void setEmail(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.user.email</code>.
     */
    public String getEmail() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.user.password</code>.
     */
    public void setPassword(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.user.password</code>.
     */
    public String getPassword() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.user.last_logged_in</code>.
     */
    public void setLastLoggedIn(LocalDate value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.user.last_logged_in</code>.
     */
    public LocalDate getLastLoggedIn() {
        return (LocalDate) get(4);
    }

    /**
     * Setter for <code>public.user.email_verified</code>.
     */
    public void setEmailVerified(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.user.email_verified</code>.
     */
    public Boolean getEmailVerified() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>public.user.active</code>.
     */
    public void setActive(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.user.active</code>.
     */
    public Boolean getActive() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>public.user.role</code>.
     */
    public void setRole(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.user.role</code>.
     */
    public Integer getRole() {
        return (Integer) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, String, String, String, LocalDate, Boolean, Boolean, Integer> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, String, String, String, LocalDate, Boolean, Boolean, Integer> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return User.USER.USER_ID;
    }

    @Override
    public Field<String> field2() {
        return User.USER.USER_NAME;
    }

    @Override
    public Field<String> field3() {
        return User.USER.EMAIL;
    }

    @Override
    public Field<String> field4() {
        return User.USER.PASSWORD;
    }

    @Override
    public Field<LocalDate> field5() {
        return User.USER.LAST_LOGGED_IN;
    }

    @Override
    public Field<Boolean> field6() {
        return User.USER.EMAIL_VERIFIED;
    }

    @Override
    public Field<Boolean> field7() {
        return User.USER.ACTIVE;
    }

    @Override
    public Field<Integer> field8() {
        return User.USER.ROLE;
    }

    @Override
    public Long component1() {
        return getUserId();
    }

    @Override
    public String component2() {
        return getUserName();
    }

    @Override
    public String component3() {
        return getEmail();
    }

    @Override
    public String component4() {
        return getPassword();
    }

    @Override
    public LocalDate component5() {
        return getLastLoggedIn();
    }

    @Override
    public Boolean component6() {
        return getEmailVerified();
    }

    @Override
    public Boolean component7() {
        return getActive();
    }

    @Override
    public Integer component8() {
        return getRole();
    }

    @Override
    public Long value1() {
        return getUserId();
    }

    @Override
    public String value2() {
        return getUserName();
    }

    @Override
    public String value3() {
        return getEmail();
    }

    @Override
    public String value4() {
        return getPassword();
    }

    @Override
    public LocalDate value5() {
        return getLastLoggedIn();
    }

    @Override
    public Boolean value6() {
        return getEmailVerified();
    }

    @Override
    public Boolean value7() {
        return getActive();
    }

    @Override
    public Integer value8() {
        return getRole();
    }

    @Override
    public UserRecord value1(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserRecord value2(String value) {
        setUserName(value);
        return this;
    }

    @Override
    public UserRecord value3(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UserRecord value4(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UserRecord value5(LocalDate value) {
        setLastLoggedIn(value);
        return this;
    }

    @Override
    public UserRecord value6(Boolean value) {
        setEmailVerified(value);
        return this;
    }

    @Override
    public UserRecord value7(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public UserRecord value8(Integer value) {
        setRole(value);
        return this;
    }

    @Override
    public UserRecord values(Long value1, String value2, String value3, String value4, LocalDate value5, Boolean value6, Boolean value7, Integer value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Long userId, String userName, String email, String password, LocalDate lastLoggedIn, Boolean emailVerified, Boolean active, Integer role) {
        super(User.USER);

        setUserId(userId);
        setUserName(userName);
        setEmail(email);
        setPassword(password);
        setLastLoggedIn(lastLoggedIn);
        setEmailVerified(emailVerified);
        setActive(active);
        setRole(role);
    }
}
